# Server Configuration
server.port=${SERVER_PORT:8080}

# CORS configuration (allow typical frontend dev hosts by default)
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:}
cors.allowed-origin-patterns=${CORS_ALLOWED_ORIGIN_PATTERNS:http://localhost:*,http://127.0.0.1:*}

# Database configuration (override via env vars in non-local environments)
spring.datasource.url=${DATABASE_URL:${DB_URL:jdbc:postgresql://localhost:5432/tariffsheriff}}
spring.datasource.username=${DATABASE_USERNAME:${DB_USER:tariff_sheriff}}
spring.datasource.password=${DATABASE_PASSWORD:${DB_PASSWORD:tariff_sheriff}}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=${DATABASE_MAX_POOL_SIZE:10}
spring.datasource.hikari.minimum-idle=${DATABASE_MIN_IDLE:2}
spring.datasource.hikari.connection-timeout=${DATABASE_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${DATABASE_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${DATABASE_MAX_LIFETIME:1200000}
spring.datasource.hikari.pool-name=tariffsheriff-hikari-pool

# Hibernate should validate the schema created via Flyway migrations
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# Flyway migration settings
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# JWT Configuration
jwt.secret=${JWT_SECRET:ff12189b52cbc92e16daaba6c45a7abda817faadf8c10b32dc1d73eebf91f8d9ef2eb143514e627a1f427beddf7c1ab3f398652e70e4abb37245879da0f02c8b}
jwt.expiration=3600000

# Swagger/OpenAPI Configuration
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
